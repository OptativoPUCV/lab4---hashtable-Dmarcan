Tue 11 Apr 2023 12:20:56 AM UTC: 
 tests:  0|6
total_score: 0/70
380ea61
Tue 11 Apr 2023 12:27:54 AM UTC: 
 hashmap.c | 13 +++++++++++--
 1 file changed, 11 insertions(+), 2 deletions(-)
In file included from test.c:4:
hashmap.c: In function ‘createMap’:
hashmap.c:62:17: error: invalid initializer
   62 |     HashMap map=malloc(sizeof(HashMap));
      |                 ^~~~~~
hashmap.c:63:12: error: invalid operands to binary == (have ‘HashMap’ {aka ‘struct HashMap’} and ‘void *’)
   63 |     if (map==NULL)return NULL;
      |            ^~
hashmap.c:65:12: error: incompatible types when returning type ‘HashMap’ {aka ‘struct HashMap’} but ‘HashMap *’ {aka ‘struct HashMap *’} was expected
   65 |     return map
      |            ^~~
hashmap.c:65:15: error: expected ‘;’ before ‘}’ token
   65 |     return map
      |               ^
      |               ;
   66 | }
      | ~              
hashmap.c:66:1: error: control reaches end of non-void function [-Werror=return-type]
   66 | }
      | ^
cc1: all warnings being treated as errors
Compilation failed
924dd0c
Tue 11 Apr 2023 12:28:02 AM UTC: 
 hashmap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
hashmap.c: In function ‘createMap’:
hashmap.c:62:17: error: invalid initializer
   62 |     HashMap map=malloc(sizeof(HashMap));
      |                 ^~~~~~
hashmap.c:63:12: error: invalid operands to binary == (have ‘HashMap’ {aka ‘struct HashMap’} and ‘void *’)
   63 |     if (map==NULL)return NULL;
      |            ^~
hashmap.c:65:12: error: incompatible types when returning type ‘HashMap’ {aka ‘struct HashMap’} but ‘HashMap *’ {aka ‘struct HashMap *’} was expected
   65 |     return map;
      |            ^~~
hashmap.c:66:1: error: control reaches end of non-void function [-Werror=return-type]
   66 | }
      | ^
cc1: all warnings being treated as errors
Compilation failed
de879af
Tue 11 Apr 2023 12:32:21 AM UTC: 
 hashmap.c | 8 ++++++--
 1 file changed, 6 insertions(+), 2 deletions(-)
In file included from test.c:4:
hashmap.c: In function ‘createMap’:
hashmap.c:62:19: error: invalid initializer
   62 |     HashMap map = (HashMap *) malloc(sizeof(HashMap));
      |                   ^
hashmap.c:63:12: error: invalid operands to binary == (have ‘HashMap’ {aka ‘struct HashMap’} and ‘void *’)
   63 |     if (map==NULL)return NULL;
      |            ^~
hashmap.c:64:8: error: invalid type argument of ‘->’ (have ‘HashMap’ {aka ‘struct HashMap’})
   64 |     map->buckets=calloc(capacity,sizeof(Pair));
      |        ^~
hashmap.c:65:12: error: invalid type argument of ‘->’ (have ‘HashMap’ {aka ‘struct HashMap’})
   65 |     if (map->buckets==NULL)return NULL;
      |            ^~
hashmap.c:66:8: error: invalid type argument of ‘->’ (have ‘HashMap’ {aka ‘struct HashMap’})
   66 |     map->size=0;
      |        ^~
hashmap.c:67:8: error: invalid type argument of ‘->’ (have ‘HashMap’ {aka ‘struct HashMap’})
   67 |     map->capacity=capacity;
      |        ^~
hashmap.c:68:8: error: invalid type argument of ‘->’ (have ‘HashMap’ {aka ‘struct HashMap’})
   68 |     map->current=-1;
      |        ^~
hashmap.c:69:12: error: incompatible types when returning type ‘HashMap’ {aka ‘struct HashMap’} but ‘HashMap *’ {aka ‘struct HashMap *’} was expected
   69 |     return map;
      |            ^~~
hashmap.c:70:1: error: control reaches end of non-void function [-Werror=return-type]
   70 | }
      | ^
cc1: all warnings being treated as errors
Compilation failed
a269378
Tue 11 Apr 2023 12:33:12 AM UTC: 
 hashmap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
hashmap.c: In function ‘createMap’:
hashmap.c:62:19: error: invalid initializer
   62 |     HashMap map = (HashMap *) malloc(sizeof(HashMap));
      |                   ^
hashmap.c:63:12: error: invalid operands to binary == (have ‘HashMap’ {aka ‘struct HashMap’} and ‘void *’)
   63 |     if (map==NULL)return NULL;
      |            ^~
hashmap.c:64:8: error: invalid type argument of ‘->’ (have ‘HashMap’ {aka ‘struct HashMap’})
   64 |     map->buckets = calloc(capacity,sizeof(Pair *));
      |        ^~
hashmap.c:65:12: error: invalid type argument of ‘->’ (have ‘HashMap’ {aka ‘struct HashMap’})
   65 |     if (map->buckets==NULL)return NULL;
      |            ^~
hashmap.c:66:8: error: invalid type argument of ‘->’ (have ‘HashMap’ {aka ‘struct HashMap’})
   66 |     map->size=0;
      |        ^~
hashmap.c:67:8: error: invalid type argument of ‘->’ (have ‘HashMap’ {aka ‘struct HashMap’})
   67 |     map->capacity=capacity;
      |        ^~
hashmap.c:68:8: error: invalid type argument of ‘->’ (have ‘HashMap’ {aka ‘struct HashMap’})
   68 |     map->current=-1;
      |        ^~
hashmap.c:69:12: error: incompatible types when returning type ‘HashMap’ {aka ‘struct HashMap’} but ‘HashMap *’ {aka ‘struct HashMap *’} was expected
   69 |     return map;
      |            ^~~
hashmap.c:70:1: error: control reaches end of non-void function [-Werror=return-type]
   70 | }
      | ^
cc1: all warnings being treated as errors
Compilation failed
8d03072
Tue 11 Apr 2023 12:33:20 AM UTC: 
 hashmap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
hashmap.c: In function ‘createMap’:
hashmap.c:62:19: error: invalid initializer
   62 |     HashMap map = (HashMap *) malloc(sizeof(HashMap *));
      |                   ^
hashmap.c:63:12: error: invalid operands to binary == (have ‘HashMap’ {aka ‘struct HashMap’} and ‘void *’)
   63 |     if (map==NULL)return NULL;
      |            ^~
hashmap.c:64:8: error: invalid type argument of ‘->’ (have ‘HashMap’ {aka ‘struct HashMap’})
   64 |     map->buckets = calloc(capacity,sizeof(Pair *));
      |        ^~
hashmap.c:65:12: error: invalid type argument of ‘->’ (have ‘HashMap’ {aka ‘struct HashMap’})
   65 |     if (map->buckets==NULL)return NULL;
      |            ^~
hashmap.c:66:8: error: invalid type argument of ‘->’ (have ‘HashMap’ {aka ‘struct HashMap’})
   66 |     map->size=0;
      |        ^~
hashmap.c:67:8: error: invalid type argument of ‘->’ (have ‘HashMap’ {aka ‘struct HashMap’})
   67 |     map->capacity=capacity;
      |        ^~
hashmap.c:68:8: error: invalid type argument of ‘->’ (have ‘HashMap’ {aka ‘struct HashMap’})
   68 |     map->current=-1;
      |        ^~
hashmap.c:69:12: error: incompatible types when returning type ‘HashMap’ {aka ‘struct HashMap’} but ‘HashMap *’ {aka ‘struct HashMap *’} was expected
   69 |     return map;
      |            ^~~
hashmap.c:70:1: error: control reaches end of non-void function [-Werror=return-type]
   70 | }
      | ^
cc1: all warnings being treated as errors
Compilation failed
0c3c1cf
Tue 11 Apr 2023 12:33:26 AM UTC: 
 hashmap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
hashmap.c: In function ‘createMap’:
hashmap.c:62:19: error: invalid initializer
   62 |     HashMap map = (HashMap *) malloc(sizeof(HashMap));
      |                   ^
hashmap.c:63:12: error: invalid operands to binary == (have ‘HashMap’ {aka ‘struct HashMap’} and ‘void *’)
   63 |     if (map==NULL)return NULL;
      |            ^~
hashmap.c:64:8: error: invalid type argument of ‘->’ (have ‘HashMap’ {aka ‘struct HashMap’})
   64 |     map->buckets = calloc(capacity,sizeof(Pair *));
      |        ^~
hashmap.c:65:12: error: invalid type argument of ‘->’ (have ‘HashMap’ {aka ‘struct HashMap’})
   65 |     if (map->buckets==NULL)return NULL;
      |            ^~
hashmap.c:66:8: error: invalid type argument of ‘->’ (have ‘HashMap’ {aka ‘struct HashMap’})
   66 |     map->size=0;
      |        ^~
hashmap.c:67:8: error: invalid type argument of ‘->’ (have ‘HashMap’ {aka ‘struct HashMap’})
   67 |     map->capacity=capacity;
      |        ^~
hashmap.c:68:8: error: invalid type argument of ‘->’ (have ‘HashMap’ {aka ‘struct HashMap’})
   68 |     map->current=-1;
      |        ^~
hashmap.c:69:12: error: incompatible types when returning type ‘HashMap’ {aka ‘struct HashMap’} but ‘HashMap *’ {aka ‘struct HashMap *’} was expected
   69 |     return map;
      |            ^~~
hashmap.c:70:1: error: control reaches end of non-void function [-Werror=return-type]
   70 | }
      | ^
cc1: all warnings being treated as errors
Compilation failed
92d911d
